[{"/home/johannes/Desktop/Projects/minflix-react/src/pages/Search.js":"1","/home/johannes/Desktop/Projects/minflix-react/src/pages/Home.js":"2","/home/johannes/Desktop/Projects/minflix-react/src/App.js":"3","/home/johannes/Desktop/Projects/minflix-react/src/actions/moviesActions.js":"4","/home/johannes/Desktop/Projects/minflix-react/src/reportWebVitals.js":"5","/home/johannes/Desktop/Projects/minflix-react/src/pages/Trending.js":"6","/home/johannes/Desktop/Projects/minflix-react/src/components/Movies.js":"7","/home/johannes/Desktop/Projects/minflix-react/src/reducers/moviesReducer.js":"8","/home/johannes/Desktop/Projects/minflix-react/src/components/MovieCard.js":"9","/home/johannes/Desktop/Projects/minflix-react/src/pages/Movie.js":"10","/home/johannes/Desktop/Projects/minflix-react/src/store.js":"11","/home/johannes/Desktop/Projects/minflix-react/src/components/TvSeries.js":"12","/home/johannes/Desktop/Projects/minflix-react/src/pages/Favourites.js":"13","/home/johannes/Desktop/Projects/minflix-react/src/components/Hero.js":"14","/home/johannes/Desktop/Projects/minflix-react/src/index.js":"15","/home/johannes/Desktop/Projects/minflix-react/src/pages/Movies.js":"16","/home/johannes/Desktop/Projects/minflix-react/src/pages/TvSeries.js":"17","/home/johannes/Desktop/Projects/minflix-react/src/components/Trending.js":"18","/home/johannes/Desktop/Projects/minflix-react/src/reducers/index.js":"19"},{"size":1652,"mtime":1615895859255,"results":"20","hashOfConfig":"21"},{"size":2360,"mtime":1615894825445,"results":"22","hashOfConfig":"21"},{"size":996,"mtime":1615806534673,"results":"23","hashOfConfig":"21"},{"size":3538,"mtime":1615890940811,"results":"24","hashOfConfig":"21"},{"size":362,"mtime":1612291128821,"results":"25","hashOfConfig":"21"},{"size":729,"mtime":1615386555604,"results":"26","hashOfConfig":"21"},{"size":702,"mtime":1615418380295,"results":"27","hashOfConfig":"21"},{"size":1728,"mtime":1615831632994,"results":"28","hashOfConfig":"21"},{"size":2807,"mtime":1615891828144,"results":"29","hashOfConfig":"21"},{"size":4110,"mtime":1615836945001,"results":"30","hashOfConfig":"21"},{"size":366,"mtime":1612691011028,"results":"31","hashOfConfig":"21"},{"size":759,"mtime":1615385969618,"results":"32","hashOfConfig":"21"},{"size":885,"mtime":1615891981060,"results":"33","hashOfConfig":"21"},{"size":1315,"mtime":1615895810072,"results":"34","hashOfConfig":"21"},{"size":549,"mtime":1612689178222,"results":"35","hashOfConfig":"21"},{"size":718,"mtime":1615386325130,"results":"36","hashOfConfig":"21"},{"size":738,"mtime":1615386481119,"results":"37","hashOfConfig":"21"},{"size":756,"mtime":1615418327189,"results":"38","hashOfConfig":"21"},{"size":182,"mtime":1612660441490,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"131pz8z",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/johannes/Desktop/Projects/minflix-react/src/pages/Search.js",["90","91"],"/home/johannes/Desktop/Projects/minflix-react/src/pages/Home.js",["92","93"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Movies from \"../components/Movies\";\nimport Trending from \"../components/Trending\";\nimport TvSeries from \"../components/TvSeries\";\n\nconst Home = () => {\n\tconst [searchField, setSearchField] = useState(\"\");\n\tconst [emptyFieldError, setEmptyFieldError] = useState(false);\n\tconst history = useHistory();\n\n\tconst inputChange = (e) => {\n\t\tsetSearchField(e.target.value);\n\t};\n\n\tconst searchSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (searchField !== \"\") {\n\t\t\thistory.push({ pathname: \"/search\", state: searchField });\n\t\t} else {\n\t\t\tsetEmptyFieldError(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"hero\">\n\t\t\t\t<div className=\"hero__content\">\n\t\t\t\t\t<div className=\"hero__content--text\">\n\t\t\t\t\t\t<h1>Welcome!</h1>\n\t\t\t\t\t\t<h3>Discover and explore recent and trending Movies & TV Shows</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form action=\"\" className=\"hero__content--form\">\n\t\t\t\t\t\t<div className=\"form__control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\tid=\"\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\t\t\tclassName=\"form__element form__text\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"form__element form__btn\"\n\t\t\t\t\t\t\t\tonClick={searchSubmit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow Me!\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<p>{emptyFieldError ? \"Please fill the Search field\" : null}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"category\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title trending\">What's Trending</h2>\n\t\t\t\t\t\t<Link to=\"/trending\" className=\"category__link\">\n\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Trending />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"category\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title movies\">Popular Movies</h2>\n\t\t\t\t\t\t<Link to=\"/movies\" className=\"category__link\">\n\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Movies />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"category\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title series\">Popular Series</h2>\n\t\t\t\t\t\t<Link to=\"/tvseries\" className=\"category__link\">\n\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TvSeries />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n",["94","95"],"/home/johannes/Desktop/Projects/minflix-react/src/App.js",[],["96","97"],"/home/johannes/Desktop/Projects/minflix-react/src/actions/moviesActions.js",["98"],"import axios from \"axios\";\n\nconst API_KEY = \"6f53f4a81ecef5f6a1f7440bb392e20b\";\nconst moviesURL = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US`;\nconst trendingURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`;\nconst tvseriesURL = `https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US`;\nconst movieURL = \"https://api.themoviedb.org/3/movie/\";\nconst seriesURL = \"https://api.themoviedb.org/3/tv/\";\nconst searchURL = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&query=`;\n\nexport const getMovies = () => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(moviesURL)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_MOVIES\",\n\t\t\t\tpayload: res.data.results,\n\t\t\t})\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"MOVIES_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const getTrending = () => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(trendingURL)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_TRENDING\",\n\t\t\t\tpayload: res.data.results,\n\t\t\t})\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"TRENDING_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const getDetails = (id) => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(`${movieURL}${id}?api_key=${API_KEY}`)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\taxios\n\t\t\t\t\t.get(`${seriesURL}${id}?api_key=${API_KEY}`)\n\t\t\t\t\t.then((res) =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: \"GET_DETAILS\",\n\t\t\t\t\t\t\tpayload: res.data,\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.catch((error) => console.log(error));\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_DETAILS\",\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"DETAILS_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const clearDetails = () => {\n\treturn {\n\t\ttype: \"CLEAR_DETAILS\",\n\t};\n};\n\nexport const getTvSeries = () => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(tvseriesURL)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_TV_SERIES\",\n\t\t\t\tpayload: res.data.results,\n\t\t\t})\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"SERIES_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const getFavourite = () => (dispatch) => {\n\tif (localStorage.getItem(\"liked_movies\") !== null) {\n\t\tconst liked_movies = JSON.parse(localStorage.getItem(\"liked_movies\"));\n\t\t// const filteredFav = filterfavourite(liked_movies, \"id\");\n\t\tdispatch({\n\t\t\ttype: \"GET_FAVOURITE\",\n\t\t\tpayload: liked_movies,\n\t\t});\n\t}\n};\n\nexport const search = (searchTerm) => (dispatch) => {\n\tdispatch(loading());\n\n\taxios\n\t\t.get(searchURL + searchTerm)\n\t\t.then((res) => {\n\t\t\tconst polished = removePersons(res.data.results);\n\n\t\t\tdispatch({\n\t\t\t\ttype: \"SEARCH\",\n\t\t\t\tpayload: polished,\n\t\t\t});\n\t\t})\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"SEARCH_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const clearSearchresult = () => {\n\treturn {\n\t\ttype: \"CLEAR_SEARCH\",\n\t};\n};\n\nexport const loading = () => {\n\treturn {\n\t\ttype: \"LOADING\",\n\t};\n};\n\n// Remove persons from the search result\nconst removePersons = (result) => {\n\tconst polishedResult = result.filter((res) => !res.gender);\n\treturn polishedResult;\n};\n\n//Remove duplicate movies saved on local storage\n// Got it covered in the MovieCard component now, but i'm still gonna leave it here 😀\nconst filterfavourite = (localFavourite, property = \"id\") => {\n\tconst filteredFavourite = [];\n\tconst objectFilter = {};\n\n\tfor (let i in localFavourite) {\n\t\tobjectFilter[localFavourite[i][property]] = localFavourite[i];\n\t}\n\n\tfor (let i in objectFilter) {\n\t\tfilteredFavourite.push(objectFilter[i]);\n\t}\n\n\treturn filteredFavourite;\n};\n","/home/johannes/Desktop/Projects/minflix-react/src/reportWebVitals.js",[],["99","100"],"/home/johannes/Desktop/Projects/minflix-react/src/pages/Trending.js",["101"],"/home/johannes/Desktop/Projects/minflix-react/src/components/Movies.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/reducers/moviesReducer.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/components/MovieCard.js",["102","103","104"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport FeatherIcon from \"feather-icons-react\";\nimport { getFavourite } from \"../actions/moviesActions\";\nimport default_poster from \"../assets/default_poster.jpg\";\n\nconst MovieCard = ({ data }) => {\n\tconst dispatch = useDispatch();\n\tconst { favourite } = useSelector((state) => state.movies);\n\n\tconst [liked, setLiked] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (favourite !== null) {\n\t\t\tfavourite.map((fav) => {\n\t\t\t\tif (fav.id === data.id) {\n\t\t\t\t\tsetLiked(!liked);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tconst like = () => {\n\t\tif (localStorage.getItem(\"liked_movies\") == null) {\n\t\t\tlet liked_movies = [];\n\t\t\tliked_movies.push(data);\n\t\t\tlocalStorage.setItem(\"liked_movies\", JSON.stringify(liked_movies));\n\t\t} else {\n\t\t\tlet liked_movies = JSON.parse(localStorage.getItem(\"liked_movies\"));\n\n\t\t\t//Check if movie/tvshow is already saved as favourite\n\n\t\t\tconst duplicate = liked_movies.filter((liked) => liked.id === data.id);\n\t\t\tconsole.log(liked_movies);\n\n\t\t\tif (Object.keys(duplicate).length >= 1) {\n\t\t\t\tconsole.log(\"dupe\");\n\t\t\t\tduplicate.map((dupe) => {\n\t\t\t\t\tconsole.log(liked_movies.indexOf(dupe));\n\t\t\t\t\tliked_movies.splice(liked_movies.indexOf(dupe), 1);\n\t\t\t\t\tlocalStorage.setItem(\"liked_movies\", JSON.stringify(liked_movies));\n\t\t\t\t\tdispatch(getFavourite());\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(Object.keys(duplicate).length);\n\t\t\t\tliked_movies.push(data);\n\t\t\t\tlocalStorage.setItem(\"liked_movies\", JSON.stringify(liked_movies));\n\t\t\t}\n\t\t}\n\t\tsetLiked(!liked);\n\t};\n\n\treturn (\n\t\t<div className=\"movieCard\">\n\t\t\t<FeatherIcon\n\t\t\t\ticon=\"heart\"\n\t\t\t\tclassName=\"favourite\"\n\t\t\t\tfill={liked ? \"#562a5a\" : \"white\"}\n\t\t\t\tcolor=\"purple\"\n\t\t\t\tonClick={like}\n\t\t\t/>\n\t\t\t<div className=\"movieCard__poster\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={\n\t\t\t\t\t\tdata.poster_path\n\t\t\t\t\t\t\t? `http://image.tmdb.org/t/p/original${data.poster_path}`\n\t\t\t\t\t\t\t: default_poster\n\t\t\t\t\t}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Link to={`/movie/${data.id}`} className=\"movie__Link\">\n\t\t\t\t<div className=\"movieCard__details\">\n\t\t\t\t\t<p>{data.title ? data.title : data.name}</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{data.release_date ? (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{new Intl.DateTimeFormat(\"en-GB\", {\n\t\t\t\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\t\t\t\t}).format(Date.parse(data.release_date))}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{data.first_air_date ? (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{new Intl.DateTimeFormat(\"en-GB\", {\n\t\t\t\t\t\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\t\t\t\t\t\t}).format(Date.parse(data.first_air_date))}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\"Release/Air Date N/A\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default MovieCard;\n",["105","106"],"/home/johannes/Desktop/Projects/minflix-react/src/pages/Movie.js",["107","108"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDetails, clearDetails } from \"../actions/moviesActions\";\n\nimport default_poster from \"../assets/default_poster.jpg\";\n\nimport {\n\tCircularProgressbar,\n\tbuildStyles,\n\tCircularProgressbarWithChildren,\n} from \"react-circular-progressbar\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Movie = () => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useParams();\n\tconst { details, loading, error } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getDetails(id));\n\t\treturn function cleanup() {\n\t\t\tdispatch(clearDetails());\n\t\t};\n\t}, [dispatch, id]);\n\n\treturn (\n\t\t<div>\n\t\t\t{details === null ? (\n\t\t\t\t<div className=\"error\">\n\t\t\t\t\tSorry, couldn't load details for selected Movie/TvShow\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundImage: `url(http://image.tmdb.org/t/p/w780${details.backdrop_path})`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"movie\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t\t\t<div className=\"poster\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\tdetails.poster_path\n\t\t\t\t\t\t\t\t\t\t\t\t? `http://image.tmdb.org/t/p/original${details.poster_path}`\n\t\t\t\t\t\t\t\t\t\t\t\t: default_poster\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"desc\">\n\t\t\t\t\t\t\t\t\t{details.title ? (\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"desc__heading\"> {details.title} </h2>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"desc__heading\"> {details.name} </h2>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t<p className=\"desc__text tagline\">{details.tagline} </p>\n\t\t\t\t\t\t\t\t\t<h3 className=\"desc__heading\">Overview</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"desc__text\">{details.overview}</p>\n\t\t\t\t\t\t\t\t\t{details.genres ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"genres desc__text\">\n\t\t\t\t\t\t\t\t\t\t\t<h3>Genres:</h3>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"genres__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t{details.genres.map((genre) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"genre\" key={genre.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{genre.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{details.runtime ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"desc__text\">\n\t\t\t\t\t\t\t\t\t\t\t\tRuntime: {details.runtime} mins\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t{details.vote_average ? (\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: \"70px\", height: \"70px\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<VisibilitySensor>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{({ isVisible }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst rating = isVisible\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? details.vote_average * 10\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgressbarWithChildren\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={rating}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={10}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles={buildStyles({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trotation: 1,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeLinecap: \"round\",\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Text size\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextSize: \"16px\",\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How long animation takes to go from one percentage to another, in seconds\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathTransitionDuration: 3,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Can specify path transition in more detail, or remove it entirely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// pathTransition: 'none',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Colors\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathColor: \"#ff2901\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextColor: \"#ff2901\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrailColor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#ff2901\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth: \"100\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <strong>Rating</strong> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong style={{ color: \"#ff2901\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{rating}%\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CircularProgressbarWithChildren>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t</VisibilitySensor>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Movie;\n","/home/johannes/Desktop/Projects/minflix-react/src/store.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/components/TvSeries.js",["109"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getTvSeries } from \"../actions/moviesActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MovieCard from \"./MovieCard\";\n\nconst TvSeries = () => {\n\tconst dispatch = useDispatch();\n\tconst { tvseries } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getTvSeries());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t{tvseries === null ? (\n\t\t\t\t<div className=\"error\">\n\t\t\t\t\t<p>Error Fetching List</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{tvseries.slice(0, 4).map((series) => (\n\t\t\t\t\t\t<MovieCard data={series} key={series.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TvSeries;\n","/home/johannes/Desktop/Projects/minflix-react/src/pages/Favourites.js",["110"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFavourite } from \"../actions/moviesActions\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst Favourites = () => {\n\tconst dispatch = useDispatch();\n\tconst { favourite } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getFavourite());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t{favourite === null ? (\n\t\t\t\t<div>You dont have any moie/Show saved</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title movies\">Favourites</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t\t{favourite.map((fav) => (\n\t\t\t\t\t\t\t<MovieCard data={fav} key={fav.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Favourites;\n","/home/johannes/Desktop/Projects/minflix-react/src/components/Hero.js",["111","112"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Hero = () => {\n\tconst [searchField, setSearchField] = useState(\"\");\n\tconst [emptyFieldError, setEmptyFieldError] = useState(false);\n\tconst history = useHistory();\n\n\tconst inputChange = (e) => {\n\t\tsetSearchField(e.target.value);\n\t};\n\n\tconst searchSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (searchField !== \"\") {\n\t\t\thistory.push({ pathname: \"/search\", state: searchField });\n\t\t} else {\n\t\t\tsetEmptyFieldError(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"hero\">\n\t\t\t<div className=\"hero__content\">\n\t\t\t\t<div className=\"hero__content--text\">\n\t\t\t\t\t<h1>Welcome!</h1>\n\t\t\t\t\t<h3>Discover and explore recent and trending Movies & TV Shows</h3>\n\t\t\t\t</div>\n\t\t\t\t<form action=\"\" className=\"hero__content--form\">\n\t\t\t\t\t<div className=\"form__control\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tid=\"\"\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\t\tclassName=\"form__element form__text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"form__element form__btn\"\n\t\t\t\t\t\t\tonClick={searchSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tShow Me!\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<p>{emptyFieldError ? \"Please fill the Search field\" : null}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Hero;\n","/home/johannes/Desktop/Projects/minflix-react/src/index.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/pages/Movies.js",["113","114","115"],"/home/johannes/Desktop/Projects/minflix-react/src/pages/TvSeries.js",["116"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTvSeries } from \"../actions/moviesActions\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst TvSeries = () => {\n\tconst dispatch = useDispatch();\n\tconst { tvseries } = useSelector((state) => state.movies);\n\tconsole.log(tvseries);\n\n\tuseEffect(() => {\n\t\tdispatch(getTvSeries());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{tvseries.map((tvseries) => (\n\t\t\t\t\t\t<MovieCard data={tvseries} key={tvseries.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TvSeries;\n","/home/johannes/Desktop/Projects/minflix-react/src/components/Trending.js",["117"],"/home/johannes/Desktop/Projects/minflix-react/src/reducers/index.js",[],{"ruleId":"118","severity":1,"message":"119","line":6,"column":23,"nodeType":"120","messageId":"121","endLine":6,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":21,"column":5,"nodeType":"124","endLine":21,"endColumn":15,"suggestions":"125"},{"ruleId":"118","severity":1,"message":"126","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"127","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":21},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"118","severity":1,"message":"134","line":151,"column":7,"nodeType":"120","messageId":"121","endLine":151,"endColumn":22},{"ruleId":"128","replacedBy":"135"},{"ruleId":"130","replacedBy":"136"},{"ruleId":"118","severity":1,"message":"137","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":16,"column":24,"nodeType":"140","messageId":"141","endLine":16,"endColumn":26},{"ruleId":"122","severity":1,"message":"142","line":22,"column":5,"nodeType":"124","endLine":22,"endColumn":7,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"139","line":39,"column":26,"nodeType":"140","messageId":"141","endLine":39,"endColumn":28},{"ruleId":"128","replacedBy":"144"},{"ruleId":"130","replacedBy":"145"},{"ruleId":"118","severity":1,"message":"146","line":9,"column":2,"nodeType":"120","messageId":"121","endLine":9,"endColumn":21},{"ruleId":"118","severity":1,"message":"147","line":18,"column":28,"nodeType":"120","messageId":"121","endLine":18,"endColumn":33},{"ruleId":"118","severity":1,"message":"137","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"148","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"126","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"137","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"148","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"137","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":16,"column":5,"nodeType":"124","endLine":16,"endColumn":7,"suggestions":"149"},{"ruleId":"118","severity":1,"message":"137","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"137","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":14},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["150"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],"'filterfavourite' is assigned a value but never used.",["151"],["152"],"'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'data.id', 'favourite', and 'liked'. Either include them or remove the dependency array. You can also do a functional update 'setLiked(l => ...)' if you only need 'liked' in the 'setLiked' call.",["153"],["151"],["152"],"'CircularProgressbar' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.",["154"],{"desc":"155","fix":"156"},"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [dispatch, location]",{"range":"161","text":"162"},"Update the dependencies array to be: [data.id, favourite, liked]",{"range":"163","text":"164"},"Update the dependencies array to be: [dispatch]",{"range":"165","text":"166"},[639,649],"[dispatch, location]",[636,638],"[data.id, favourite, liked]",[439,441],"[dispatch]"]