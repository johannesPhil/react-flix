[{"/home/johannes/Desktop/Projects/minflix-react/src/pages/Search.js":"1","/home/johannes/Desktop/Projects/minflix-react/src/pages/Home.js":"2","/home/johannes/Desktop/Projects/minflix-react/src/App.js":"3","/home/johannes/Desktop/Projects/minflix-react/src/actions/moviesActions.js":"4","/home/johannes/Desktop/Projects/minflix-react/src/reportWebVitals.js":"5","/home/johannes/Desktop/Projects/minflix-react/src/pages/Trending.js":"6","/home/johannes/Desktop/Projects/minflix-react/src/components/Movies.js":"7","/home/johannes/Desktop/Projects/minflix-react/src/reducers/moviesReducer.js":"8","/home/johannes/Desktop/Projects/minflix-react/src/components/MovieCard.js":"9","/home/johannes/Desktop/Projects/minflix-react/src/pages/Movie.js":"10","/home/johannes/Desktop/Projects/minflix-react/src/store.js":"11","/home/johannes/Desktop/Projects/minflix-react/src/components/TvSeries.js":"12","/home/johannes/Desktop/Projects/minflix-react/src/pages/Favourites.js":"13","/home/johannes/Desktop/Projects/minflix-react/src/components/Hero.js":"14","/home/johannes/Desktop/Projects/minflix-react/src/index.js":"15","/home/johannes/Desktop/Projects/minflix-react/src/pages/Movies.js":"16","/home/johannes/Desktop/Projects/minflix-react/src/pages/TvSeries.js":"17","/home/johannes/Desktop/Projects/minflix-react/src/components/Trending.js":"18","/home/johannes/Desktop/Projects/minflix-react/src/reducers/index.js":"19"},{"size":1650,"mtime":1615895879714,"results":"20","hashOfConfig":"21"},{"size":2360,"mtime":1615894825445,"results":"22","hashOfConfig":"21"},{"size":996,"mtime":1615806534673,"results":"23","hashOfConfig":"21"},{"size":3538,"mtime":1615890940811,"results":"24","hashOfConfig":"21"},{"size":362,"mtime":1612291128821,"results":"25","hashOfConfig":"21"},{"size":729,"mtime":1615386555604,"results":"26","hashOfConfig":"21"},{"size":702,"mtime":1615418380295,"results":"27","hashOfConfig":"21"},{"size":1728,"mtime":1615831632994,"results":"28","hashOfConfig":"21"},{"size":2807,"mtime":1615891828144,"results":"29","hashOfConfig":"21"},{"size":4110,"mtime":1615836945001,"results":"30","hashOfConfig":"21"},{"size":702,"mtime":1615987896653,"results":"31","hashOfConfig":"21"},{"size":759,"mtime":1615385969618,"results":"32","hashOfConfig":"21"},{"size":885,"mtime":1615891981060,"results":"33","hashOfConfig":"21"},{"size":1315,"mtime":1615895810072,"results":"34","hashOfConfig":"21"},{"size":549,"mtime":1615923266594,"results":"35","hashOfConfig":"21"},{"size":718,"mtime":1615386325130,"results":"36","hashOfConfig":"21"},{"size":738,"mtime":1615386481119,"results":"37","hashOfConfig":"21"},{"size":756,"mtime":1615418327189,"results":"38","hashOfConfig":"21"},{"size":182,"mtime":1612660441490,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"10eclne",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/johannes/Desktop/Projects/minflix-react/src/pages/Search.js",["91","92"],"import React, { useEffect } from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport Hero from \"../components/Hero\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { clearSearchresult, search } from \"../actions/moviesActions\";\n\nconst Search = () => {\n\tconst dispatch = useDispatch();\n\tconst { searchResult, loading } = useSelector((state) => state.movies);\n\tconsole.log(searchResult);\n\tconst location = useLocation();\n\n\tuseEffect(() => {\n\t\tdispatch(search(location.state));\n\n\t\treturn function cleanup() {\n\t\t\tdispatch(clearSearchresult());\n\t\t};\n\t}, [location]);\n\treturn (\n\t\t<div>\n\t\t\t<Hero />\n\t\t\t<div className=\"container\">\n\t\t\t\t{searchResult === null ? (\n\t\t\t\t\t<div className=\"error\">\n\t\t\t\t\t\tError encountered in fetching search results\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{searchResult.length <= 0 ? (\n\t\t\t\t\t\t\t\t\t<div className=\"error\">\n\t\t\t\t\t\t\t\t\t\tSorry, couldn't find anything related to{\" \"}\n\t\t\t\t\t\t\t\t\t\t{`'${location.state}'`}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"category__title movies\">\n\t\t\t\t\t\t\t\t\t\t\t\tResult for {`'${location.state}'`}\n\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{searchResult.map((search) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<MovieCard data={search} key={search.id} />\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Search;\n","/home/johannes/Desktop/Projects/minflix-react/src/pages/Home.js",["93","94"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Movies from \"../components/Movies\";\nimport Trending from \"../components/Trending\";\nimport TvSeries from \"../components/TvSeries\";\n\nconst Home = () => {\n\tconst [searchField, setSearchField] = useState(\"\");\n\tconst [emptyFieldError, setEmptyFieldError] = useState(false);\n\tconst history = useHistory();\n\n\tconst inputChange = (e) => {\n\t\tsetSearchField(e.target.value);\n\t};\n\n\tconst searchSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (searchField !== \"\") {\n\t\t\thistory.push({ pathname: \"/search\", state: searchField });\n\t\t} else {\n\t\t\tsetEmptyFieldError(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"hero\">\n\t\t\t\t<div className=\"hero__content\">\n\t\t\t\t\t<div className=\"hero__content--text\">\n\t\t\t\t\t\t<h1>Welcome!</h1>\n\t\t\t\t\t\t<h3>Discover and explore recent and trending Movies & TV Shows</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form action=\"\" className=\"hero__content--form\">\n\t\t\t\t\t\t<div className=\"form__control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\t\tid=\"\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\t\t\tclassName=\"form__element form__text\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"form__element form__btn\"\n\t\t\t\t\t\t\t\tonClick={searchSubmit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow Me!\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<p>{emptyFieldError ? \"Please fill the Search field\" : null}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"category\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title trending\">What's Trending</h2>\n\t\t\t\t\t\t<Link to=\"/trending\" className=\"category__link\">\n\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Trending />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"category\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title movies\">Popular Movies</h2>\n\t\t\t\t\t\t<Link to=\"/movies\" className=\"category__link\">\n\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Movies />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"category\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title series\">Popular Series</h2>\n\t\t\t\t\t\t<Link to=\"/tvseries\" className=\"category__link\">\n\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TvSeries />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","/home/johannes/Desktop/Projects/minflix-react/src/App.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/actions/moviesActions.js",["95"],"import axios from \"axios\";\n\nconst API_KEY = \"6f53f4a81ecef5f6a1f7440bb392e20b\";\nconst moviesURL = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US`;\nconst trendingURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`;\nconst tvseriesURL = `https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US`;\nconst movieURL = \"https://api.themoviedb.org/3/movie/\";\nconst seriesURL = \"https://api.themoviedb.org/3/tv/\";\nconst searchURL = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&query=`;\n\nexport const getMovies = () => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(moviesURL)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_MOVIES\",\n\t\t\t\tpayload: res.data.results,\n\t\t\t})\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"MOVIES_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const getTrending = () => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(trendingURL)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_TRENDING\",\n\t\t\t\tpayload: res.data.results,\n\t\t\t})\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"TRENDING_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const getDetails = (id) => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(`${movieURL}${id}?api_key=${API_KEY}`)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\taxios\n\t\t\t\t\t.get(`${seriesURL}${id}?api_key=${API_KEY}`)\n\t\t\t\t\t.then((res) =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: \"GET_DETAILS\",\n\t\t\t\t\t\t\tpayload: res.data,\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.catch((error) => console.log(error));\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_DETAILS\",\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"DETAILS_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const clearDetails = () => {\n\treturn {\n\t\ttype: \"CLEAR_DETAILS\",\n\t};\n};\n\nexport const getTvSeries = () => (dispatch) => {\n\tdispatch(loading());\n\tdispatch(getFavourite());\n\taxios\n\t\t.get(tvseriesURL)\n\t\t.then((res) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"GET_TV_SERIES\",\n\t\t\t\tpayload: res.data.results,\n\t\t\t})\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"SERIES_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const getFavourite = () => (dispatch) => {\n\tif (localStorage.getItem(\"liked_movies\") !== null) {\n\t\tconst liked_movies = JSON.parse(localStorage.getItem(\"liked_movies\"));\n\t\t// const filteredFav = filterfavourite(liked_movies, \"id\");\n\t\tdispatch({\n\t\t\ttype: \"GET_FAVOURITE\",\n\t\t\tpayload: liked_movies,\n\t\t});\n\t}\n};\n\nexport const search = (searchTerm) => (dispatch) => {\n\tdispatch(loading());\n\n\taxios\n\t\t.get(searchURL + searchTerm)\n\t\t.then((res) => {\n\t\t\tconst polished = removePersons(res.data.results);\n\n\t\t\tdispatch({\n\t\t\t\ttype: \"SEARCH\",\n\t\t\t\tpayload: polished,\n\t\t\t});\n\t\t})\n\t\t.catch((error) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"SEARCH_ERROR\",\n\t\t\t})\n\t\t);\n};\n\nexport const clearSearchresult = () => {\n\treturn {\n\t\ttype: \"CLEAR_SEARCH\",\n\t};\n};\n\nexport const loading = () => {\n\treturn {\n\t\ttype: \"LOADING\",\n\t};\n};\n\n// Remove persons from the search result\nconst removePersons = (result) => {\n\tconst polishedResult = result.filter((res) => !res.gender);\n\treturn polishedResult;\n};\n\n//Remove duplicate movies saved on local storage\n// Got it covered in the MovieCard component now, but i'm still gonna leave it here 😀\nconst filterfavourite = (localFavourite, property = \"id\") => {\n\tconst filteredFavourite = [];\n\tconst objectFilter = {};\n\n\tfor (let i in localFavourite) {\n\t\tobjectFilter[localFavourite[i][property]] = localFavourite[i];\n\t}\n\n\tfor (let i in objectFilter) {\n\t\tfilteredFavourite.push(objectFilter[i]);\n\t}\n\n\treturn filteredFavourite;\n};\n","/home/johannes/Desktop/Projects/minflix-react/src/reportWebVitals.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/pages/Trending.js",["96"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTrending } from \"../actions/moviesActions\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst Trending = () => {\n\tconst dispatch = useDispatch();\n\tconst { trending } = useSelector((state) => state.movies);\n\tconsole.log(trending);\n\n\tuseEffect(() => {\n\t\tdispatch(getTrending());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{trending.map((trend) => (\n\t\t\t\t\t\t<MovieCard data={trend} key={trend.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Trending;\n","/home/johannes/Desktop/Projects/minflix-react/src/components/Movies.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/reducers/moviesReducer.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/components/MovieCard.js",["97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport FeatherIcon from \"feather-icons-react\";\nimport { getFavourite } from \"../actions/moviesActions\";\nimport default_poster from \"../assets/default_poster.jpg\";\n\nconst MovieCard = ({ data }) => {\n\tconst dispatch = useDispatch();\n\tconst { favourite } = useSelector((state) => state.movies);\n\n\tconst [liked, setLiked] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (favourite !== null) {\n\t\t\tfavourite.map((fav) => {\n\t\t\t\tif (fav.id === data.id) {\n\t\t\t\t\tsetLiked(!liked);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tconst like = () => {\n\t\tif (localStorage.getItem(\"liked_movies\") == null) {\n\t\t\tlet liked_movies = [];\n\t\t\tliked_movies.push(data);\n\t\t\tlocalStorage.setItem(\"liked_movies\", JSON.stringify(liked_movies));\n\t\t} else {\n\t\t\tlet liked_movies = JSON.parse(localStorage.getItem(\"liked_movies\"));\n\n\t\t\t//Check if movie/tvshow is already saved as favourite\n\n\t\t\tconst duplicate = liked_movies.filter((liked) => liked.id === data.id);\n\t\t\tconsole.log(liked_movies);\n\n\t\t\tif (Object.keys(duplicate).length >= 1) {\n\t\t\t\tconsole.log(\"dupe\");\n\t\t\t\tduplicate.map((dupe) => {\n\t\t\t\t\tconsole.log(liked_movies.indexOf(dupe));\n\t\t\t\t\tliked_movies.splice(liked_movies.indexOf(dupe), 1);\n\t\t\t\t\tlocalStorage.setItem(\"liked_movies\", JSON.stringify(liked_movies));\n\t\t\t\t\tdispatch(getFavourite());\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(Object.keys(duplicate).length);\n\t\t\t\tliked_movies.push(data);\n\t\t\t\tlocalStorage.setItem(\"liked_movies\", JSON.stringify(liked_movies));\n\t\t\t}\n\t\t}\n\t\tsetLiked(!liked);\n\t};\n\n\treturn (\n\t\t<div className=\"movieCard\">\n\t\t\t<FeatherIcon\n\t\t\t\ticon=\"heart\"\n\t\t\t\tclassName=\"favourite\"\n\t\t\t\tfill={liked ? \"#562a5a\" : \"white\"}\n\t\t\t\tcolor=\"purple\"\n\t\t\t\tonClick={like}\n\t\t\t/>\n\t\t\t<div className=\"movieCard__poster\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={\n\t\t\t\t\t\tdata.poster_path\n\t\t\t\t\t\t\t? `http://image.tmdb.org/t/p/original${data.poster_path}`\n\t\t\t\t\t\t\t: default_poster\n\t\t\t\t\t}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Link to={`/movie/${data.id}`} className=\"movie__Link\">\n\t\t\t\t<div className=\"movieCard__details\">\n\t\t\t\t\t<p>{data.title ? data.title : data.name}</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{data.release_date ? (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{new Intl.DateTimeFormat(\"en-GB\", {\n\t\t\t\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\t\t\t\t}).format(Date.parse(data.release_date))}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{data.first_air_date ? (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{new Intl.DateTimeFormat(\"en-GB\", {\n\t\t\t\t\t\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t\t\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\t\t\t\t\t\t}).format(Date.parse(data.first_air_date))}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\"Release/Air Date N/A\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default MovieCard;\n","/home/johannes/Desktop/Projects/minflix-react/src/pages/Movie.js",["100","101"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDetails, clearDetails } from \"../actions/moviesActions\";\n\nimport default_poster from \"../assets/default_poster.jpg\";\n\nimport {\n\tCircularProgressbar,\n\tbuildStyles,\n\tCircularProgressbarWithChildren,\n} from \"react-circular-progressbar\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Movie = () => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useParams();\n\tconst { details, loading, error } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getDetails(id));\n\t\treturn function cleanup() {\n\t\t\tdispatch(clearDetails());\n\t\t};\n\t}, [dispatch, id]);\n\n\treturn (\n\t\t<div>\n\t\t\t{details === null ? (\n\t\t\t\t<div className=\"error\">\n\t\t\t\t\tSorry, couldn't load details for selected Movie/TvShow\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundImage: `url(http://image.tmdb.org/t/p/w780${details.backdrop_path})`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"movie\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t\t\t<div className=\"poster\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\tdetails.poster_path\n\t\t\t\t\t\t\t\t\t\t\t\t? `http://image.tmdb.org/t/p/original${details.poster_path}`\n\t\t\t\t\t\t\t\t\t\t\t\t: default_poster\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"desc\">\n\t\t\t\t\t\t\t\t\t{details.title ? (\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"desc__heading\"> {details.title} </h2>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"desc__heading\"> {details.name} </h2>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t<p className=\"desc__text tagline\">{details.tagline} </p>\n\t\t\t\t\t\t\t\t\t<h3 className=\"desc__heading\">Overview</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"desc__text\">{details.overview}</p>\n\t\t\t\t\t\t\t\t\t{details.genres ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"genres desc__text\">\n\t\t\t\t\t\t\t\t\t\t\t<h3>Genres:</h3>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"genres__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t{details.genres.map((genre) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"genre\" key={genre.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{genre.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{details.runtime ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"desc__text\">\n\t\t\t\t\t\t\t\t\t\t\t\tRuntime: {details.runtime} mins\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t{details.vote_average ? (\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: \"70px\", height: \"70px\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<VisibilitySensor>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{({ isVisible }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst rating = isVisible\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? details.vote_average * 10\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgressbarWithChildren\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={rating}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth={10}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles={buildStyles({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trotation: 1,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeLinecap: \"round\",\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Text size\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextSize: \"16px\",\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How long animation takes to go from one percentage to another, in seconds\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathTransitionDuration: 3,\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Can specify path transition in more detail, or remove it entirely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// pathTransition: 'none',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Colors\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathColor: \"#ff2901\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextColor: \"#ff2901\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrailColor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#ff2901\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrokeWidth: \"100\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <strong>Rating</strong> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong style={{ color: \"#ff2901\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{rating}%\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CircularProgressbarWithChildren>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t</VisibilitySensor>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Movie;\n","/home/johannes/Desktop/Projects/minflix-react/src/store.js",["102"],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleWare = [thunk];\n\nconst composeEnhancers =\n\ttypeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n\t\t\t\t// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n\t\t  })\n\t\t: compose;\n\nconst movieStore = createStore(\n\trootReducer,\n\tcomposeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default movieStore;\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n","/home/johannes/Desktop/Projects/minflix-react/src/components/TvSeries.js",["103"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getTvSeries } from \"../actions/moviesActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MovieCard from \"./MovieCard\";\n\nconst TvSeries = () => {\n\tconst dispatch = useDispatch();\n\tconst { tvseries } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getTvSeries());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t{tvseries === null ? (\n\t\t\t\t<div className=\"error\">\n\t\t\t\t\t<p>Error Fetching List</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{tvseries.slice(0, 4).map((series) => (\n\t\t\t\t\t\t<MovieCard data={series} key={series.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TvSeries;\n","/home/johannes/Desktop/Projects/minflix-react/src/pages/Favourites.js",["104"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFavourite } from \"../actions/moviesActions\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst Favourites = () => {\n\tconst dispatch = useDispatch();\n\tconst { favourite } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getFavourite());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t{favourite === null ? (\n\t\t\t\t<div>You dont have any moie/Show saved</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className=\"category__head\">\n\t\t\t\t\t\t<h2 className=\"category__title movies\">Favourites</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t\t{favourite.map((fav) => (\n\t\t\t\t\t\t\t<MovieCard data={fav} key={fav.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Favourites;\n","/home/johannes/Desktop/Projects/minflix-react/src/components/Hero.js",["105","106"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Hero = () => {\n\tconst [searchField, setSearchField] = useState(\"\");\n\tconst [emptyFieldError, setEmptyFieldError] = useState(false);\n\tconst history = useHistory();\n\n\tconst inputChange = (e) => {\n\t\tsetSearchField(e.target.value);\n\t};\n\n\tconst searchSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (searchField !== \"\") {\n\t\t\thistory.push({ pathname: \"/search\", state: searchField });\n\t\t} else {\n\t\t\tsetEmptyFieldError(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"hero\">\n\t\t\t<div className=\"hero__content\">\n\t\t\t\t<div className=\"hero__content--text\">\n\t\t\t\t\t<h1>Welcome!</h1>\n\t\t\t\t\t<h3>Discover and explore recent and trending Movies & TV Shows</h3>\n\t\t\t\t</div>\n\t\t\t\t<form action=\"\" className=\"hero__content--form\">\n\t\t\t\t\t<div className=\"form__control\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tid=\"\"\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\tonChange={inputChange}\n\t\t\t\t\t\t\tclassName=\"form__element form__text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"form__element form__btn\"\n\t\t\t\t\t\t\tonClick={searchSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tShow Me!\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<p>{emptyFieldError ? \"Please fill the Search field\" : null}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Hero;\n","/home/johannes/Desktop/Projects/minflix-react/src/index.js",[],"/home/johannes/Desktop/Projects/minflix-react/src/pages/Movies.js",["107","108","109"],"import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\n\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMovies } from \"../actions/moviesActions\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst Movies = () => {\n\tconst dispatch = useDispatch();\n\n\tconst { movies } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getMovies());\n\t}, []);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{movies.map((movie) => (\n\t\t\t\t\t\t<MovieCard data={movie} key={movie.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Movies;\n","/home/johannes/Desktop/Projects/minflix-react/src/pages/TvSeries.js",["110"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTvSeries } from \"../actions/moviesActions\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst TvSeries = () => {\n\tconst dispatch = useDispatch();\n\tconst { tvseries } = useSelector((state) => state.movies);\n\tconsole.log(tvseries);\n\n\tuseEffect(() => {\n\t\tdispatch(getTvSeries());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{tvseries.map((tvseries) => (\n\t\t\t\t\t\t<MovieCard data={tvseries} key={tvseries.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TvSeries;\n","/home/johannes/Desktop/Projects/minflix-react/src/components/Trending.js",["111"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTrending } from \"../actions/moviesActions\";\nimport MovieCard from \"./MovieCard\";\n\nconst Trending = () => {\n\tconst dispatch = useDispatch();\n\tconst { trending } = useSelector((state) => state.movies);\n\n\tuseEffect(() => {\n\t\tdispatch(getTrending());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t{trending === null ? (\n\t\t\t\t<div className=\"error\">\n\t\t\t\t\t<p>Error Fetching List</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"grid\" style={{ margin: \"1rem 0\" }}>\n\t\t\t\t\t{trending.slice(0, 4).map((trend) => (\n\t\t\t\t\t\t<MovieCard data={trend} key={trend.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Trending;\n","/home/johannes/Desktop/Projects/minflix-react/src/reducers/index.js",[],{"ruleId":"112","severity":1,"message":"113","line":6,"column":23,"nodeType":"114","messageId":"115","endLine":6,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":21,"column":5,"nodeType":"118","endLine":21,"endColumn":15,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"121","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"122","line":151,"column":7,"nodeType":"114","messageId":"115","endLine":151,"endColumn":22},{"ruleId":"112","severity":1,"message":"123","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":16,"column":24,"nodeType":"126","messageId":"127","endLine":16,"endColumn":26},{"ruleId":"116","severity":1,"message":"128","line":22,"column":5,"nodeType":"118","endLine":22,"endColumn":7,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"125","line":39,"column":26,"nodeType":"126","messageId":"127","endLine":39,"endColumn":28},{"ruleId":"112","severity":1,"message":"130","line":9,"column":2,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"131","line":18,"column":28,"nodeType":"114","messageId":"115","endLine":18,"endColumn":33},{"ruleId":"112","severity":1,"message":"132","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":29},{"ruleId":"112","severity":1,"message":"123","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"133","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"120","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"123","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"133","line":1,"column":28,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"123","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":16,"column":5,"nodeType":"118","endLine":16,"endColumn":7,"suggestions":"134"},{"ruleId":"112","severity":1,"message":"123","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"123","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'filterfavourite' is assigned a value but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'data.id', 'favourite', and 'liked'. Either include them or remove the dependency array. You can also do a functional update 'setLiked(l => ...)' if you only need 'liked' in the 'setLiked' call.",["136"],"'CircularProgressbar' is defined but never used.","'error' is assigned a value but never used.","'composeWithDevTools' is defined but never used.","'useState' is defined but never used.",["137"],{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [dispatch, location]",{"range":"144","text":"145"},"Update the dependencies array to be: [data.id, favourite, liked]",{"range":"146","text":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},[637,647],"[dispatch, location]",[636,638],"[data.id, favourite, liked]",[439,441],"[dispatch]"]